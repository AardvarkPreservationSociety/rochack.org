---
---
#thing-name
{
    color: yellow;
}

/*
 * Constants
 */
$white: #FFF;
$light: #EEE;
$dark: #616161;
$gray: #CCC;
$orange: #F18D05;
$yellow: #D0D102;
$green: #61AE24;
$blue: #00A1CB;
$red: #E54028;
$pink: #D70060;

$body-bg: $light;
$body-fg: $dark;

/*
* Skeleton-SASS V1.0
* Copyright 2012 by Michael Lazer-Walker
* https://github.com/lazerwalker/Skeleton-Sass
*
* Based off of Skeleton v1.1:
* https://github.com/dhgamache/Skeleton
*
* Free to use under the MIT license.
* http://www.opensource.org/licenses/mit-license.php
*/

/* #Variable Definitions
================================================== */
    $base-width: 960px;
    $tablet-width: 768px;
    $mobile-portrait-width: 300px;
    $mobile-landscape-width: 420px;

    $num-columns: 16;
    $margin: 10px;

/* Grid
================================================== */
    @function skeleton-third-width($num: 1, $width: $base-width) {
        @return $num * ($width / 3) - (2 * $margin); }

    @function skeleton-column-width($num: 1, $width: $base-width) {
        @return ($num * ($width / $num-columns)) - (2 * $margin); }

    @mixin container {
        position: relative;
        margin: 0 auto;
        padding: 0;
        width: $base-width;

        &:after {
            content: "\0020";
            display: block;
            height: 0;
            clear: both;
            visibility: hidden; }

        @media only screen and (min-width: 768px) and (max-width: 959px) {
            width: $tablet-width; }

        @media only screen and (max-width: 767px) {
            width: $mobile-portrait-width; }

        @media only screen and (min-width: 480px) and (max-width: 767px) {
            width: $mobile-landscape-width; } }

    @mixin column {
        float: left;
        display: inline;
        margin-left: $margin;
        margin-right: $margin;

        @media only screen and (max-width: 767px) { margin: 0; } }

    @mixin row {
        @include clearfix;
        margin-bottom: 2 * $margin; }

    @mixin alpha { margin-left: 0; }
    @mixin omega { margin-right: 0; }

    @mixin columns($num: 1) {
        @include column;
        width: skeleton-column-width($num, $base-width);

        @media only screen and (min-width: 768px) and (max-width: 959px) {
            width: skeleton-column-width($num, $tablet-width); }

        @media only screen and (max-width: 767px) {
            width: $mobile-portrait-width; }

        @media only screen and (min-width: 480px) and (max-width: 767px) {
            width: $mobile-landscape-width; } }

    @mixin third($num: 1) {
        @include column;
        width: skeleton-third-width($num, $base-width);

        @media only screen and (min-width: 768px) and (max-width: 959px) {
            width: skeleton-third-width($num, $tablet-width); }

        @media only screen and (max-width: 767px) {
            width: $mobile-portrait-width; }

        @media only screen and (min-width: 480px) and (max-width: 767px) {
            width: $mobile-landscape-width; }}

    @mixin offset($num: 1) {
        $offset: 2 * $margin;
        padding-left: skeleton-column-width($num, $base-width) + $offset;

        @media only screen and (min-width: 768px) and (max-width: 959px) {
            padding-left: skeleton-column-width($num, $tablet-width) + $offset; }

        @media only screen and (max-width: 767px) {
            padding-left: 0; } }


/* #Clearing
================================================== */
/* Include clearfix on parent to clear nested columns,
or wrap each row of columns in a @include row */
@mixin clearfix {
    zoom: 1;
    &:after { clear: both; }
    &:before, &:after {
        content: '\0020';
        display: block;
        overflow: hidden;
        visibility: hidden;
        width: 0;
        height: 0; } }

/* You can also use a @include clear to clear columns */
@mixin clear {
    clear: both;
    display: block;
    overflow: hidden;
    visibility: hidden;
    width: 0;
    height: 0; }



body {
    background: $dark url('/static/hackathon.jpg');
    background-size: cover;
    background-repeat: no-repeat;
    color: $white;
    font-family: Lato, Helvetica, Arial, sans-serif;
    font-weight: 400;
    font-size: 16px;
    margin: 50px 0px 0px 0px;
    padding: 0px;
    min-height: 100%;
}

.container {
    @include container;
}

.box {
    &.timers {
        @include columns(10);
    }
    
    &.twitter {
        @include columns(6);
    }

    &.dancing {
        position: absolute;
        bottom: 30px;

        img {
            width: 200px;
        }
    }

    background: rgba(0, 0, 0, .45);
    padding: 15px;
    box-sizing: border-box;

    h1 {
        margin: 5px 0px;
        padding: 0px;

        &:not(:first-child) {
            margin-top: 50px;
        }
    }

    .timer {
        font-size: 72px;
        text-align: center;

        .time {
            font-size: 16px;
        }
    }
}

.dandy-lion {
    position: absolute;
    height: 80px;
    bottom: 0;
    left: 120px;
    animation: bounce 3s, move 6s, pulse .5s; // separated by a comma
    animation-iteration-count: infinite;
}

@keyframes bounce {
    0% { left:120px; }
    50% { left:80%; }
    100% { left:120px; }
}

@keyframes move {
    0% { top: 500px; }
    50% { top: 170px; }
    100% { top: 500px; }
}

@keyframes pulse {
    0% { height: 100px; }
    50% { height: 90px; }
    100% { height: 100px; }
}
